[
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "heading",
          "depth": 1,
          "children": [
            {
              "type": "text",
              "value": "WUI Smarty",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 98,
              "offset": 108
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "(A bare-bones implementation of basic smarty syntax in javascript)",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 109
                },
                "end": {
                  "line": 3,
                  "column": 67,
                  "offset": 175
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 109
            },
            "end": {
              "line": 3,
              "column": 67,
              "offset": 175
            },
            "indent": []
          }
        },
        {
          "type": "heading",
          "depth": 2,
          "children": [
            {
              "type": "text",
              "value": "Why",
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 177
                },
                "end": {
                  "line": 5,
                  "column": 4,
                  "offset": 180
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 5,
              "column": 1,
              "offset": 177
            },
            "end": {
              "line": 6,
              "column": 4,
              "offset": 184
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Wui.Smarty is a way to create DOM elements based on data. Wui.Smarty should be considered a",
              "position": {
                "start": {
                  "line": 7,
                  "column": 1,
                  "offset": 185
                },
                "end": {
                  "line": 7,
                  "column": 92,
                  "offset": 276
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 7,
              "column": 1,
              "offset": 185
            },
            "end": {
              "line": 7,
              "column": 92,
              "offset": 276
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "replacement to Wui.Template in that it addresses Wui.Template's vulnerabilities, namely:",
              "position": {
                "start": {
                  "line": 8,
                  "column": 1,
                  "offset": 277
                },
                "end": {
                  "line": 8,
                  "column": 89,
                  "offset": 365
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 8,
              "column": 1,
              "offset": 277
            },
            "end": {
              "line": 8,
              "column": 89,
              "offset": 365
            },
            "indent": []
          }
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "loose": false,
          "children": [
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The risk of XSS attack through use of inline functions",
                      "position": {
                        "start": {
                          "line": 9,
                          "column": 3,
                          "offset": 368
                        },
                        "end": {
                          "line": 9,
                          "column": 57,
                          "offset": 422
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 9,
                      "column": 3,
                      "offset": 368
                    },
                    "end": {
                      "line": 9,
                      "column": 57,
                      "offset": 422
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 9,
                  "column": 1,
                  "offset": 366
                },
                "end": {
                  "line": 9,
                  "column": 57,
                  "offset": 422
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Inability to escape HTML and Javascript values",
                      "position": {
                        "start": {
                          "line": 10,
                          "column": 3,
                          "offset": 425
                        },
                        "end": {
                          "line": 10,
                          "column": 49,
                          "offset": 471
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 10,
                      "column": 3,
                      "offset": 425
                    },
                    "end": {
                      "line": 10,
                      "column": 49,
                      "offset": 471
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 10,
                  "column": 1,
                  "offset": 423
                },
                "end": {
                  "line": 10,
                  "column": 49,
                  "offset": 471
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Inability to access nested variables in a fail-safe manner",
                      "position": {
                        "start": {
                          "line": 11,
                          "column": 3,
                          "offset": 474
                        },
                        "end": {
                          "line": 11,
                          "column": 61,
                          "offset": 532
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 11,
                      "column": 3,
                      "offset": 474
                    },
                    "end": {
                      "line": 11,
                      "column": 61,
                      "offset": 532
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 11,
                  "column": 1,
                  "offset": 472
                },
                "end": {
                  "line": 11,
                  "column": 61,
                  "offset": 532
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Inability to \"compile\" the template - a 2X speed improvement in Wui.Smarty",
                      "position": {
                        "start": {
                          "line": 12,
                          "column": 3,
                          "offset": 535
                        },
                        "end": {
                          "line": 12,
                          "column": 77,
                          "offset": 609
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 12,
                      "column": 3,
                      "offset": 535
                    },
                    "end": {
                      "line": 12,
                      "column": 77,
                      "offset": 609
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 12,
                  "column": 1,
                  "offset": 533
                },
                "end": {
                  "line": 12,
                  "column": 77,
                  "offset": 609
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 9,
              "column": 1,
              "offset": 366
            },
            "end": {
              "line": 12,
              "column": 77,
              "offset": 609
            },
            "indent": [
              1,
              1,
              1
            ]
          }
        },
        {
          "type": "heading",
          "depth": 2,
          "children": [
            {
              "type": "text",
              "value": "Syntax",
              "position": {
                "start": {
                  "line": 14,
                  "column": 1,
                  "offset": 611
                },
                "end": {
                  "line": 14,
                  "column": 7,
                  "offset": 617
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 14,
              "column": 1,
              "offset": 611
            },
            "end": {
              "line": 15,
              "column": 7,
              "offset": 624
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Wui.Smarty syntactically follows the familiar usage of placing variables in the template\nsurrounded by braces (or curly brackets). Data is set as a parameter to the make() method, and\nmake() always returns a string. Functions are available via a 'function' flag that will be\ndescribed below. Additionaly, it borrows many features and syntax from the PHP server-side\ntemplating system Smarty ",
              "position": {
                "start": {
                  "line": 16,
                  "column": 1,
                  "offset": 625
                },
                "end": {
                  "line": 20,
                  "column": 26,
                  "offset": 1016
                },
                "indent": [
                  1,
                  1,
                  1,
                  1
                ]
              }
            },
            {
              "type": "link",
              "title": null,
              "url": "http://www.smarty.net/",
              "children": [
                {
                  "type": "text",
                  "value": "http://www.smarty.net/",
                  "position": {
                    "start": {
                      "line": 20,
                      "column": 27,
                      "offset": 1017
                    },
                    "end": {
                      "line": 20,
                      "column": 49,
                      "offset": 1039
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 20,
                  "column": 26,
                  "offset": 1016
                },
                "end": {
                  "line": 20,
                  "column": 74,
                  "offset": 1064
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 20,
                  "column": 74,
                  "offset": 1064
                },
                "end": {
                  "line": 20,
                  "column": 75,
                  "offset": 1065
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 16,
              "column": 1,
              "offset": 625
            },
            "end": {
              "line": 20,
              "column": 75,
              "offset": 1065
            },
            "indent": [
              1,
              1,
              1,
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Wui.Smarty will \"compile\" its template on the first run, meaning rather than parsing the template\nstring with a regex on every iteration, it will dynamically create a function on the first\niteration that will then be called with the new data of each subsequent iteration. This creates\napproximately a 2X speed advantage (tested on a 10,000 X 4 data set), even with the more\nfunctionality in the template.",
              "position": {
                "start": {
                  "line": 22,
                  "column": 1,
                  "offset": 1067
                },
                "end": {
                  "line": 26,
                  "column": 31,
                  "offset": 1471
                },
                "indent": [
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 22,
              "column": 1,
              "offset": 1067
            },
            "end": {
              "line": 26,
              "column": 31,
              "offset": 1471
            },
            "indent": [
              1,
              1,
              1,
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Template syntax can be understood through the follow examples, starting with the most simple:",
              "position": {
                "start": {
                  "line": 28,
                  "column": 1,
                  "offset": 1473
                },
                "end": {
                  "line": 28,
                  "column": 94,
                  "offset": 1566
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 28,
              "column": 1,
              "offset": 1473
            },
            "end": {
              "line": 28,
              "column": 94,
              "offset": 1566
            },
            "indent": []
          }
        },
        {
          "type": "code",
          "lang": null,
          "value": " '<p>{firstname}</p>'",
          "position": {
            "start": {
              "line": 30,
              "column": 1,
              "offset": 1568
            },
            "end": {
              "line": 30,
              "column": 26,
              "offset": 1593
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "An only slighty more complex example would be as follows, notice the nested variable reference:",
              "position": {
                "start": {
                  "line": 32,
                  "column": 1,
                  "offset": 1595
                },
                "end": {
                  "line": 32,
                  "column": 96,
                  "offset": 1690
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 32,
              "column": 1,
              "offset": 1595
            },
            "end": {
              "line": 32,
              "column": 96,
              "offset": 1690
            },
            "indent": []
          }
        },
        {
          "type": "code",
          "lang": null,
          "value": " '<p>{name.last}, {name.first}</p>'",
          "position": {
            "start": {
              "line": 34,
              "column": 1,
              "offset": 1692
            },
            "end": {
              "line": 34,
              "column": 40,
              "offset": 1731
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "As usual, values which don't exist will be returned as empty strings, however values that are\nset with a javascript 'undefined' object will return 'undefined'.",
              "position": {
                "start": {
                  "line": 36,
                  "column": 1,
                  "offset": 1733
                },
                "end": {
                  "line": 37,
                  "column": 66,
                  "offset": 1892
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 36,
              "column": 1,
              "offset": 1733
            },
            "end": {
              "line": 37,
              "column": 66,
              "offset": 1892
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Another example shows the smarty syntax now, with the addition of flags:",
              "position": {
                "start": {
                  "line": 39,
                  "column": 1,
                  "offset": 1894
                },
                "end": {
                  "line": 39,
                  "column": 73,
                  "offset": 1966
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 39,
              "column": 1,
              "offset": 1894
            },
            "end": {
              "line": 39,
              "column": 73,
              "offset": 1966
            },
            "indent": []
          }
        },
        {
          "type": "code",
          "lang": null,
          "value": " '<p>{name.last|upper}, {name.first|capitalize}</p>'",
          "position": {
            "start": {
              "line": 41,
              "column": 1,
              "offset": 1968
            },
            "end": {
              "line": 41,
              "column": 57,
              "offset": 2024
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Flags are processed left to right as added to the template. Here we protect against possible XSS injection:",
              "position": {
                "start": {
                  "line": 43,
                  "column": 1,
                  "offset": 2026
                },
                "end": {
                  "line": 43,
                  "column": 108,
                  "offset": 2133
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 43,
              "column": 1,
              "offset": 2026
            },
            "end": {
              "line": 43,
              "column": 108,
              "offset": 2133
            },
            "indent": []
          }
        },
        {
          "type": "code",
          "lang": null,
          "value": " '<p>{name.last|upper|escape:html}, {name.first|capitalize|escape:html}</p>'",
          "position": {
            "start": {
              "line": 45,
              "column": 1,
              "offset": 2135
            },
            "end": {
              "line": 45,
              "column": 81,
              "offset": 2215
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Using functions to process parameters is possible, and is done in a strict manner that closes a\npotential attack vector. Rather than effectively eval'ing code that is passed into the template,\nprocessing functions are member methods of the template, and called with fixed parameters as\nin the following example:",
              "position": {
                "start": {
                  "line": 47,
                  "column": 1,
                  "offset": 2217
                },
                "end": {
                  "line": 50,
                  "column": 26,
                  "offset": 2528
                },
                "indent": [
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 47,
              "column": 1,
              "offset": 2217
            },
            "end": {
              "line": 50,
              "column": 26,
              "offset": 2528
            },
            "indent": [
              1,
              1,
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Given the following template definition and data:",
              "position": {
                "start": {
                  "line": 52,
                  "column": 1,
                  "offset": 2530
                },
                "end": {
                  "line": 52,
                  "column": 50,
                  "offset": 2579
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 52,
              "column": 1,
              "offset": 2530
            },
            "end": {
              "line": 52,
              "column": 50,
              "offset": 2579
            },
            "indent": []
          }
        },
        {
          "type": "code",
          "lang": null,
          "value": " data =  [\n              { name: 'Stephen <b>The Steve</b>', age: {number: 32, description:'Thirty-two'} },\n              { name: 'Kayli', age: {number: 24, description:'Twenty-four'} },\n              { name: 'Girl', age: {number: 4, description:'Four'} },\n              { name: 'Boy', age: {number: 2, description:'Two'} },\n              { name: 'Super-Fly', age: {number: 0.5, description:'Six Months'} },\n         ];\n\n template = new Wui.Smarty({\n     html:       '<p>{name|escape:\"html\"}, {|function:processAge:age}</p>',\n\n     processAge: function(age){\n                     // How every parent should describe the age of their children ;-)\n                     if(age.number > 1) {\n                         return age.number;\n                     } else {\n                         return age.description;\n                     }\n                 }\n });\n\n data.forEach(function(itm){\n     $(template.make(itm))\n         .appendTo('body');\n });",
          "position": {
            "start": {
              "line": 54,
              "column": 1,
              "offset": 2581
            },
            "end": {
              "line": 78,
              "column": 9,
              "offset": 3616
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Will output the following:",
              "position": {
                "start": {
                  "line": 80,
                  "column": 1,
                  "offset": 3618
                },
                "end": {
                  "line": 80,
                  "column": 27,
                  "offset": 3644
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 80,
              "column": 1,
              "offset": 3618
            },
            "end": {
              "line": 80,
              "column": 27,
              "offset": 3644
            },
            "indent": []
          }
        },
        {
          "type": "code",
          "lang": null,
          "value": " <p>Stephen &lt;b&gt;The Steve&lt;/b&gt;, 32</p>\n <p>Kayli, 24</p>\n <p>Girl, 4</p>\n <p>Boy, 2</p>\n <p>Super-Fly, Six Months</p>",
          "position": {
            "start": {
              "line": 82,
              "column": 1,
              "offset": 3646
            },
            "end": {
              "line": 86,
              "column": 34,
              "offset": 3793
            },
            "indent": [
              1,
              1,
              1,
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Notice in this example, values processed by the function are parameters to the function flag, not\nnamed in the place for variable names. This pattern allows for safer functions, defined with\ncomments, and allows for more complex operations including the use of closures. Globally defined\nmethods can be referenced either directly or within methods on the template config.",
              "position": {
                "start": {
                  "line": 88,
                  "column": 1,
                  "offset": 3795
                },
                "end": {
                  "line": 91,
                  "column": 84,
                  "offset": 4166
                },
                "indent": [
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 88,
              "column": 1,
              "offset": 3795
            },
            "end": {
              "line": 91,
              "column": 84,
              "offset": 4166
            },
            "indent": [
              1,
              1,
              1
            ]
          }
        },
        {
          "type": "heading",
          "depth": 2,
          "children": [
            {
              "type": "text",
              "value": "Avaialble modifiers/flags are:",
              "position": {
                "start": {
                  "line": 93,
                  "column": 1,
                  "offset": 4168
                },
                "end": {
                  "line": 93,
                  "column": 31,
                  "offset": 4198
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 93,
              "column": 1,
              "offset": 4168
            },
            "end": {
              "line": 94,
              "column": 31,
              "offset": 4229
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "loose": false,
          "children": [
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "capitalize: Will capitalize the first letter of every word in the string",
                      "position": {
                        "start": {
                          "line": 95,
                          "column": 3,
                          "offset": 4232
                        },
                        "end": {
                          "line": 95,
                          "column": 75,
                          "offset": 4304
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 95,
                      "column": 3,
                      "offset": 4232
                    },
                    "end": {
                      "line": 95,
                      "column": 75,
                      "offset": 4304
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 95,
                  "column": 1,
                  "offset": 4230
                },
                "end": {
                  "line": 95,
                  "column": 75,
                  "offset": 4304
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "default: Accepts a parameter to use as a default value if variable is a blank string.\nExample: {undefinedVar|default:\"Default Text\"}",
                      "position": {
                        "start": {
                          "line": 96,
                          "column": 3,
                          "offset": 4307
                        },
                        "end": {
                          "line": 97,
                          "column": 49,
                          "offset": 4441
                        },
                        "indent": [
                          3
                        ]
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 96,
                      "column": 3,
                      "offset": 4307
                    },
                    "end": {
                      "line": 97,
                      "column": 49,
                      "offset": 4441
                    },
                    "indent": [
                      3
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 96,
                  "column": 1,
                  "offset": 4305
                },
                "end": {
                  "line": 97,
                  "column": 49,
                  "offset": 4441
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "escape: Used to encode special characters. Accepts 'html', 'javascript', 'json' and 'url'",
                      "position": {
                        "start": {
                          "line": 98,
                          "column": 3,
                          "offset": 4444
                        },
                        "end": {
                          "line": 98,
                          "column": 92,
                          "offset": 4533
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 98,
                      "column": 3,
                      "offset": 4444
                    },
                    "end": {
                      "line": 98,
                      "column": 92,
                      "offset": 4533
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 98,
                  "column": 1,
                  "offset": 4442
                },
                "end": {
                  "line": 98,
                  "column": 92,
                  "offset": 4533
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "function: Will call a function within the scope of the template. Parameters are the function\nname, and then arguments to pass.",
                      "position": {
                        "start": {
                          "line": 99,
                          "column": 3,
                          "offset": 4536
                        },
                        "end": {
                          "line": 100,
                          "column": 36,
                          "offset": 4664
                        },
                        "indent": [
                          3
                        ]
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 99,
                      "column": 3,
                      "offset": 4536
                    },
                    "end": {
                      "line": 100,
                      "column": 36,
                      "offset": 4664
                    },
                    "indent": [
                      3
                    ]
                  }
                },
                {
                  "type": "list",
                  "ordered": false,
                  "start": null,
                  "loose": false,
                  "children": [
                    {
                      "type": "listItem",
                      "loose": false,
                      "checked": null,
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "Example {|function:funcName:param1Name:param2Name:...} When functions are used, the function\nflag MUST be the first one, and the the key value MUST be blank since the keys are\nparameters to the function.",
                              "position": {
                                "start": {
                                  "line": 101,
                                  "column": 6,
                                  "offset": 4670
                                },
                                "end": {
                                  "line": 103,
                                  "column": 33,
                                  "offset": 4883
                                },
                                "indent": [
                                  6,
                                  6
                                ]
                              }
                            }
                          ],
                          "position": {
                            "start": {
                              "line": 101,
                              "column": 6,
                              "offset": 4670
                            },
                            "end": {
                              "line": 103,
                              "column": 33,
                              "offset": 4883
                            },
                            "indent": [
                              6,
                              6
                            ]
                          }
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 101,
                          "column": 3,
                          "offset": 4667
                        },
                        "end": {
                          "line": 103,
                          "column": 33,
                          "offset": 4883
                        },
                        "indent": [
                          3,
                          3
                        ]
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 101,
                      "column": 3,
                      "offset": 4667
                    },
                    "end": {
                      "line": 103,
                      "column": 33,
                      "offset": 4883
                    },
                    "indent": [
                      3,
                      3
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 99,
                  "column": 1,
                  "offset": 4534
                },
                "end": {
                  "line": 103,
                  "column": 33,
                  "offset": 4883
                },
                "indent": [
                  1,
                  1,
                  1,
                  1
                ]
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "lower: Equivalent to toLowerCase()",
                      "position": {
                        "start": {
                          "line": 104,
                          "column": 3,
                          "offset": 4886
                        },
                        "end": {
                          "line": 104,
                          "column": 37,
                          "offset": 4920
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 104,
                      "column": 3,
                      "offset": 4886
                    },
                    "end": {
                      "line": 104,
                      "column": 37,
                      "offset": 4920
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 104,
                  "column": 1,
                  "offset": 4884
                },
                "end": {
                  "line": 104,
                  "column": 37,
                  "offset": 4920
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "unescape: Used to decode, countering the effect of the escape modifier (Accepts 'html',\n'javascript', 'json' and 'url')",
                      "position": {
                        "start": {
                          "line": 105,
                          "column": 3,
                          "offset": 4923
                        },
                        "end": {
                          "line": 106,
                          "column": 34,
                          "offset": 5044
                        },
                        "indent": [
                          3
                        ]
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 105,
                      "column": 3,
                      "offset": 4923
                    },
                    "end": {
                      "line": 106,
                      "column": 34,
                      "offset": 5044
                    },
                    "indent": [
                      3
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 105,
                  "column": 1,
                  "offset": 4921
                },
                "end": {
                  "line": 106,
                  "column": 34,
                  "offset": 5044
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "upper: Equivalent to toUpperCase()",
                      "position": {
                        "start": {
                          "line": 107,
                          "column": 3,
                          "offset": 5047
                        },
                        "end": {
                          "line": 107,
                          "column": 37,
                          "offset": 5081
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 107,
                      "column": 3,
                      "offset": 5047
                    },
                    "end": {
                      "line": 107,
                      "column": 37,
                      "offset": 5081
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 107,
                  "column": 1,
                  "offset": 5045
                },
                "end": {
                  "line": 107,
                  "column": 37,
                  "offset": 5081
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 95,
              "column": 1,
              "offset": 4230
            },
            "end": {
              "line": 107,
              "column": 37,
              "offset": 5081
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 107,
          "column": 37,
          "offset": 5081
        }
      }
    },
    "tags": [
      {
        "title": "class",
        "description": null,
        "lineNumber": 109,
        "type": null,
        "name": "Wui.Smarty"
      },
      {
        "title": "author",
        "description": "Stephen Nielsen (rolfe.nielsen@gmail.com)",
        "lineNumber": 111
      },
      {
        "title": "param",
        "description": "A configuration object which at a minimum contains the html\n                                         template and may additionally have function definitions\n                                         called from the template.",
        "lineNumber": 113,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "name": "configs"
      },
      {
        "title": "param",
        "description": "The template string that will be used.",
        "lineNumber": 117,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "configs.html"
      },
      {
        "title": "param",
        "description": "Zero or more functions that can be called from the\n                                         `{|function:function_name...}` items within the template\n                                         string.",
        "lineNumber": 119,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "function"
          }
        },
        "name": "configs.fn__"
      },
      {
        "title": "returns",
        "description": "The Wui.Smarty object is returned.",
        "lineNumber": 123,
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 125,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 126,
          "column": 0
        },
        "end": {
          "line": 134,
          "column": 2
        }
      },
      "file": "/Users/snielsen/combo2/src/Smarty.js"
    },
    "kind": "class",
    "name": "Wui.Smarty",
    "author": "Stephen Nielsen (rolfe.nielsen@gmail.com)",
    "params": [
      {
        "name": "configs",
        "lineNumber": 113,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A configuration object which at a minimum contains the html\n                                         template and may additionally have function definitions\n                                         called from the template.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 3,
                      "column": 67,
                      "offset": 223
                    },
                    "indent": [
                      1,
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 67,
                  "offset": 223
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 67,
              "offset": 223
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        },
        "properties": [
          {
            "name": "configs.html",
            "lineNumber": 117,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "The template string that will be used.",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 39,
                          "offset": 38
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 39,
                  "offset": 38
                }
              }
            },
            "type": {
              "type": "NameExpression",
              "name": "string"
            }
          },
          {
            "name": "configs.fn__",
            "lineNumber": 119,
            "description": {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Zero or more functions that can be called from the\n                                         ",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 2,
                          "column": 42,
                          "offset": 92
                        },
                        "indent": [
                          1
                        ]
                      }
                    },
                    {
                      "type": "inlineCode",
                      "value": "{|function:function_name...}",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 42,
                          "offset": 92
                        },
                        "end": {
                          "line": 2,
                          "column": 72,
                          "offset": 122
                        },
                        "indent": []
                      }
                    },
                    {
                      "type": "text",
                      "value": " items within the template\n                                         string.",
                      "position": {
                        "start": {
                          "line": 2,
                          "column": 72,
                          "offset": 122
                        },
                        "end": {
                          "line": 3,
                          "column": 49,
                          "offset": 197
                        },
                        "indent": [
                          1
                        ]
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 3,
                      "column": 49,
                      "offset": 197
                    },
                    "indent": [
                      1,
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 49,
                  "offset": 197
                }
              }
            },
            "type": {
              "type": "OptionalType",
              "expression": {
                "type": "NameExpression",
                "name": "function"
              }
            }
          }
        ]
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The Wui.Smarty object is returned.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 35,
              "offset": 34
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Object"
        }
      }
    ],
    "memberof": "Wui",
    "scope": "static",
    "members": {
      "instance": [],
      "static": []
    },
    "path": [
      {
        "name": "Wui.Smarty",
        "kind": "class",
        "scope": "static"
      }
    ],
    "namespace": ".Wui.Smarty"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Given an array of flags, applies them on the value passed in",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 61,
                  "offset": 60
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 61,
              "offset": 60
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 61,
          "offset": 60
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "A string that will have the flags applied",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "str"
      },
      {
        "title": "param",
        "description": "An array of flags that will be parsed and functions applied",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "array"
        },
        "name": "flags"
      },
      {
        "title": "returns",
        "description": "The string passed in as 'str' with the flag functions applied",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 138,
        "column": 4
      },
      "end": {
        "line": 145,
        "column": 7
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 146,
          "column": 4
        },
        "end": {
          "line": 204,
          "column": 5
        }
      },
      "file": "/Users/snielsen/combo2/src/Smarty.js"
    },
    "params": [
      {
        "name": "str",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A string that will have the flags applied",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 42,
                      "offset": 41
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 42,
              "offset": 41
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "name": "flags",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "An array of flags that will be parsed and functions applied",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 60,
                      "offset": 59
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 60,
              "offset": 59
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "array"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The string passed in as 'str' with the flag functions applied",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 62,
                      "offset": 61
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 62,
              "offset": 61
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "name": "applyFlags",
    "kind": "function",
    "memberof": "Wui.Smarty",
    "scope": "instance",
    "members": {
      "instance": [],
      "static": []
    },
    "path": [
      {
        "name": "applyFlags",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#applyFlags"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Capitalizes the first letter of every word in the string",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 57,
                  "offset": 56
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 57,
              "offset": 56
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 57,
          "offset": 56
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "A string to be capitalized. ie: \"foo bar baz\"",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "str"
      },
      {
        "title": "returns",
        "description": "Capitalized string. ie: \"Foo Bar Baz\"",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 207,
        "column": 4
      },
      "end": {
        "line": 213,
        "column": 7
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 214,
          "column": 4
        },
        "end": {
          "line": 218,
          "column": 5
        }
      },
      "file": "/Users/snielsen/combo2/src/Smarty.js"
    },
    "params": [
      {
        "name": "str",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A string to be capitalized. ie: \"foo bar baz\"",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 46,
              "offset": 45
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Capitalized string. ie: \"Foo Bar Baz\"",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 38,
                  "offset": 37
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 38,
              "offset": 37
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "name": "capitalize",
    "kind": "function",
    "memberof": "Wui.Smarty",
    "scope": "instance",
    "members": {
      "instance": [],
      "static": []
    },
    "path": [
      {
        "name": "capitalize",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#capitalize"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Allows a named function to be chain-able through using the common me.__s",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 73,
                  "offset": 72
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 73,
              "offset": 72
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 73,
          "offset": 72
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "The name of a function to call within the context of this object",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "fn"
      },
      {
        "title": "param",
        "description": "Array of parameters to be passed into function",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "array"
        },
        "name": "params"
      },
      {
        "title": "returns",
        "description": "A reference to the template object so that chaning can occur",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 221,
        "column": 4
      },
      "end": {
        "line": 228,
        "column": 7
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 229,
          "column": 4
        },
        "end": {
          "line": 236,
          "column": 5
        }
      },
      "file": "/Users/snielsen/combo2/src/Smarty.js"
    },
    "params": [
      {
        "name": "fn",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The name of a function to call within the context of this object",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 65,
                      "offset": 64
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 65,
              "offset": 64
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "name": "params",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Array of parameters to be passed into function",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 47,
                      "offset": 46
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 47,
                  "offset": 46
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 47,
              "offset": 46
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "array"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A reference to the template object so that chaning can occur",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 61,
                      "offset": 60
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 61,
                  "offset": 60
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 61,
              "offset": 60
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "name": "chain",
    "kind": "function",
    "memberof": "Wui.Smarty",
    "scope": "instance",
    "members": {
      "instance": [],
      "static": []
    },
    "path": [
      {
        "name": "chain",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#chain"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Turns the build array into a function that will be run in all future uses\nof the template. Makes use of me.build[] to create the function.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 65,
                  "offset": 138
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 65,
              "offset": 138
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 65,
          "offset": 138
        }
      }
    },
    "tags": [
      {
        "title": "returns",
        "description": "The compiled function",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "function"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 239,
        "column": 4
      },
      "end": {
        "line": 244,
        "column": 7
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 245,
          "column": 4
        },
        "end": {
          "line": 288,
          "column": 5
        }
      },
      "file": "/Users/snielsen/combo2/src/Smarty.js"
    },
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The compiled function",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 22,
                      "offset": 21
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "function"
        }
      }
    ],
    "name": "compile",
    "kind": "function",
    "memberof": "Wui.Smarty",
    "scope": "instance",
    "members": {
      "instance": [],
      "static": []
    },
    "path": [
      {
        "name": "compile",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#compile"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the string passed in, or the default string if the value is blank.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 75,
                  "offset": 74
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 75,
              "offset": 74
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 75,
          "offset": 74
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "Any string",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "str"
      },
      {
        "title": "param",
        "description": "A value to replace a blank string with",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "default"
      },
      {
        "title": "returns",
        "description": "The value string passed in, or the default value",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 291,
        "column": 4
      },
      "end": {
        "line": 298,
        "column": 7
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 299,
          "column": 4
        },
        "end": {
          "line": 306,
          "column": 5
        }
      },
      "file": "/Users/snielsen/combo2/src/Smarty.js"
    },
    "params": [
      {
        "name": "str",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Any string",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 11,
                      "offset": 10
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 11,
                  "offset": 10
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 11,
              "offset": 10
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "name": "default",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A value to replace a blank string with",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 39,
                      "offset": 38
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 39,
                  "offset": 38
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 39,
              "offset": 38
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The value string passed in, or the default value",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 49,
                      "offset": 48
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 49,
                  "offset": 48
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 49,
              "offset": 48
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "name": "defaultVal",
    "kind": "function",
    "memberof": "Wui.Smarty",
    "scope": "instance",
    "members": {
      "instance": [],
      "static": []
    },
    "path": [
      {
        "name": "defaultVal",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#defaultVal"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Escape a string for a given type of output, or reverse that escaping",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 69,
              "offset": 68
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 69,
          "offset": 68
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "The string to escape/unescape",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "str"
      },
      {
        "title": "param",
        "description": "String containing the escape type ('html'|'javascript'|'json'|'url')",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "type"
      },
      {
        "title": "param",
        "description": "Flag to reverse the usual escape sequence",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        },
        "name": "unescape"
      },
      {
        "title": "returns",
        "description": "An escaped string.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 333,
        "column": 4
      },
      "end": {
        "line": 341,
        "column": 7
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 342,
          "column": 4
        },
        "end": {
          "line": 386,
          "column": 5
        }
      },
      "file": "/Users/snielsen/combo2/src/Smarty.js"
    },
    "params": [
      {
        "name": "str",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The string to escape/unescape",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 30,
              "offset": 29
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "name": "type",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "String containing the escape type ('html'|'javascript'|'json'|'url')",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 69,
              "offset": 68
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "name": "unescape",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Flag to reverse the usual escape sequence",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 42,
                      "offset": 41
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 42,
                  "offset": 41
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 42,
              "offset": 41
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "An escaped string.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "name": "escape",
    "kind": "function",
    "memberof": "Wui.Smarty",
    "scope": "instance",
    "members": {
      "instance": [],
      "static": []
    },
    "path": [
      {
        "name": "escape",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#escape"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns the keys of an object as an alphabetically sorted array.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 65,
                  "offset": 64
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 65,
              "offset": 64
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 65,
          "offset": 64
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "Any plain object. For example the following output will return\n                             the values in the return statement:\n\n                             {\n                                 asdf: 1,\n                                 zxcv: 2,\n                                 qwer: 3\n                             }",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "obj"
      },
      {
        "title": "returns",
        "description": "Sorted array of object keys. i.e: `['asdf', 'qwer', 'zxcv']`.",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 389,
        "column": 4
      },
      "end": {
        "line": 402,
        "column": 7
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 403,
          "column": 4
        },
        "end": {
          "line": 413,
          "column": 5
        }
      },
      "file": "/Users/snielsen/combo2/src/Smarty.js"
    },
    "params": [
      {
        "name": "obj",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Any plain object. For example the following output will return\n                             the values in the return statement:",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 65,
                      "offset": 127
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 65,
                  "offset": 127
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "code",
              "lang": null,
              "value": "                         {\n                             asdf: 1,\n                             zxcv: 2,\n                             qwer: 3\n                         }",
              "position": {
                "start": {
                  "line": 4,
                  "column": 1,
                  "offset": 129
                },
                "end": {
                  "line": 8,
                  "column": 31,
                  "offset": 315
                },
                "indent": [
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 8,
              "column": 31,
              "offset": 315
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Sorted array of object keys. i.e: ",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                },
                {
                  "type": "inlineCode",
                  "value": "['asdf', 'qwer', 'zxcv']",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "end": {
                      "line": 1,
                      "column": 61,
                      "offset": 60
                    },
                    "indent": []
                  }
                },
                {
                  "type": "text",
                  "value": ".",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 61,
                      "offset": 60
                    },
                    "end": {
                      "line": 1,
                      "column": 62,
                      "offset": 61
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 62,
              "offset": 61
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "Array"
        }
      }
    ],
    "name": "getKeys",
    "kind": "function",
    "memberof": "Wui.Smarty",
    "scope": "instance",
    "members": {
      "instance": [],
      "static": []
    },
    "path": [
      {
        "name": "getKeys",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#getKeys"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Determines whether the property exists in the passed in object",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 63,
                  "offset": 62
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 63,
              "offset": 62
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 63,
          "offset": 62
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "The object to be searched within.",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "obj"
      },
      {
        "title": "param",
        "description": "A string of the property to search for within 'obj'.",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "property"
      },
      {
        "title": "returns",
        "description": "Whether the property exists within the object",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 416,
        "column": 4
      },
      "end": {
        "line": 423,
        "column": 7
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 424,
          "column": 4
        },
        "end": {
          "line": 426,
          "column": 5
        }
      },
      "file": "/Users/snielsen/combo2/src/Smarty.js"
    },
    "params": [
      {
        "name": "obj",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The object to be searched within.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 34,
                      "offset": 33
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 34,
                  "offset": 33
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 34,
              "offset": 33
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      },
      {
        "name": "property",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A string of the property to search for within 'obj'.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 53,
                      "offset": 52
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 53,
              "offset": 52
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Whether the property exists within the object",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 46,
              "offset": 45
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        }
      }
    ],
    "name": "hasProperty",
    "kind": "function",
    "memberof": "Wui.Smarty",
    "scope": "instance",
    "members": {
      "instance": [],
      "static": []
    },
    "path": [
      {
        "name": "hasProperty",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#hasProperty"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Inverts an object so that its keys are its values, and its values are its keys.\nComplex values will be dropped (functions, arrays, and objects). If a non-object,\nor an empty object is passed in, an empty object will be returned.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 67,
                  "offset": 228
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 67,
              "offset": 228
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 67,
          "offset": 228
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "The object to be inverted.",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "obj"
      },
      {
        "title": "returns",
        "description": "The passed in object copied and inverted, or an empty object.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 429,
        "column": 4
      },
      "end": {
        "line": 437,
        "column": 7
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 438,
          "column": 4
        },
        "end": {
          "line": 451,
          "column": 5
        }
      },
      "file": "/Users/snielsen/combo2/src/Smarty.js"
    },
    "params": [
      {
        "name": "obj",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The object to be inverted.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 27,
                      "offset": 26
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The passed in object copied and inverted, or an empty object.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 62,
                      "offset": 61
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 62,
                  "offset": 61
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 62,
              "offset": 61
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "name": "invert",
    "kind": "function",
    "memberof": "Wui.Smarty",
    "scope": "instance",
    "members": {
      "instance": [],
      "static": []
    },
    "path": [
      {
        "name": "invert",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#invert"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Looks for a javascript function and passes parameters to it",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 60,
                  "offset": 59
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 60,
              "offset": 59
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 60,
          "offset": 59
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "The name of a function that has been added as a\n                                 config to an instance of this template.",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "fn"
      },
      {
        "title": "param",
        "description": "Zero or more names of parameters to be looked\n                                 up in the template's data record.",
        "lineNumber": 5,
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        },
        "name": "name__"
      },
      {
        "title": "returns",
        "description": "The return value from the function",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 454,
        "column": 4
      },
      "end": {
        "line": 463,
        "column": 7
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 464,
          "column": 4
        },
        "end": {
          "line": 474,
          "column": 5
        }
      },
      "file": "/Users/snielsen/combo2/src/Smarty.js"
    },
    "params": [
      {
        "name": "fn",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The name of a function that has been added as a\n                                 config to an instance of this template.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 73,
                      "offset": 120
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 73,
                  "offset": 120
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 73,
              "offset": 120
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "name": "name__",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Zero or more names of parameters to be looked\n                                 up in the template's data record.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 67,
                      "offset": 112
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 67,
                  "offset": 112
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 67,
              "offset": 112
            }
          }
        },
        "type": {
          "type": "OptionalType",
          "expression": {
            "type": "NameExpression",
            "name": "string"
          }
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The return value from the function",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 35,
                      "offset": 34
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 35,
                  "offset": 34
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 35,
              "offset": 34
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "name": "js_function",
    "kind": "function",
    "memberof": "Wui.Smarty",
    "scope": "instance",
    "members": {
      "instance": [],
      "static": []
    },
    "path": [
      {
        "name": "js_function",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#js_function"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Determine whether a key exists in the record, and either inserts it into the template,\nor safely ignores it and inserts a blank string.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 49,
                  "offset": 135
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 49,
              "offset": 135
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 49,
          "offset": 135
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "The data object to look for values in",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "rec"
      },
      {
        "title": "param",
        "description": "A string containing a reference to a value to return",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "key"
      },
      {
        "title": "returns",
        "description": "Either the value referenced in key, or a blank string if the value\n                     did not exist.",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 477,
        "column": 4
      },
      "end": {
        "line": 486,
        "column": 7
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 487,
          "column": 4
        },
        "end": {
          "line": 518,
          "column": 5
        }
      },
      "file": "/Users/snielsen/combo2/src/Smarty.js"
    },
    "params": [
      {
        "name": "rec",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The data object to look for values in",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 38,
                  "offset": 37
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 38,
              "offset": 37
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      },
      {
        "name": "key",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A string containing a reference to a value to return",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 53,
                      "offset": 52
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 53,
              "offset": 52
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Either the value referenced in key, or a blank string if the value\n                     did not exist.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 36,
                      "offset": 102
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 36,
                  "offset": 102
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 36,
              "offset": 102
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "name": "lookup",
    "kind": "function",
    "memberof": "Wui.Smarty",
    "scope": "instance",
    "members": {
      "instance": [],
      "static": []
    },
    "path": [
      {
        "name": "lookup",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#lookup"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Capitalizes the entire string.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 31,
              "offset": 30
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 31,
          "offset": 30
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "A string to be capitalized. ie: \"FOO BAR BAZ\"",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "str"
      },
      {
        "title": "returns",
        "description": "Lower-case string. ie: \"foo bar baz\"",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 521,
        "column": 4
      },
      "end": {
        "line": 527,
        "column": 7
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 528,
          "column": 4
        },
        "end": {
          "line": 530,
          "column": 5
        }
      },
      "file": "/Users/snielsen/combo2/src/Smarty.js"
    },
    "params": [
      {
        "name": "str",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A string to be capitalized. ie: \"FOO BAR BAZ\"",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 46,
              "offset": 45
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Lower-case string. ie: \"foo bar baz\"",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 37,
                      "offset": 36
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 37,
                  "offset": 36
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 37,
              "offset": 36
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "name": "lower",
    "kind": "function",
    "memberof": "Wui.Smarty",
    "scope": "instance",
    "members": {
      "instance": [],
      "static": []
    },
    "path": [
      {
        "name": "lower",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#lower"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Returns a filled template. One of the important features of this method is to",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 78,
                  "offset": 77
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 78,
              "offset": 77
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 78,
          "offset": 77
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "Data to fill into the template",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "object"
        },
        "name": "rec"
      },
      {
        "title": "returns",
        "description": "A template string with data values filled in",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 533,
        "column": 4
      },
      "end": {
        "line": 539,
        "column": 7
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 540,
          "column": 4
        },
        "end": {
          "line": 564,
          "column": 5
        }
      },
      "file": "/Users/snielsen/combo2/src/Smarty.js"
    },
    "params": [
      {
        "name": "rec",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Data to fill into the template",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 31,
                      "offset": 30
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 31,
              "offset": 30
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "object"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A template string with data values filled in",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 45,
                      "offset": 44
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 45,
                  "offset": 44
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 45,
              "offset": 44
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "name": "make",
    "kind": "function",
    "memberof": "Wui.Smarty",
    "scope": "instance",
    "members": {
      "instance": [],
      "static": []
    },
    "path": [
      {
        "name": "make",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#make"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Separates variables from string literals in the template and pushes them individually onto\nthe build array which is used to create the 'compiled' function. Also fills the template\nstring with values for the current record.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 3,
                  "column": 43,
                  "offset": 222
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 3,
              "column": 43,
              "offset": 222
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 43,
          "offset": 222
        }
      }
    },
    "tags": [
      {
        "title": "returns",
        "description": "The full template string with comments removed and values inserted.",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 567,
        "column": 4
      },
      "end": {
        "line": 573,
        "column": 7
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 574,
          "column": 4
        },
        "end": {
          "line": 611,
          "column": 5
        }
      },
      "file": "/Users/snielsen/combo2/src/Smarty.js"
    },
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The full template string with comments removed and values inserted.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 68,
                      "offset": 67
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 68,
                  "offset": 67
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 68,
              "offset": 67
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "name": "parse",
    "kind": "function",
    "memberof": "Wui.Smarty",
    "scope": "instance",
    "members": {
      "instance": [],
      "static": []
    },
    "path": [
      {
        "name": "parse",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#parse"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Trims any set of custom characters off of the beginning and end of a string",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 76,
                  "offset": 75
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 76,
              "offset": 75
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 76,
          "offset": 75
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "The string to trim",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "str"
      },
      {
        "title": "param",
        "description": "An undelimited string of characters to trim off both sides\n                                 of the string.",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "characters"
      },
      {
        "title": "param",
        "description": "Optional. Regex flags that would be used in a javascript\n                                 regex. Defaults to 'g'.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "flags"
      },
      {
        "title": "returns",
        "description": "A trimmed string",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 614,
        "column": 4
      },
      "end": {
        "line": 624,
        "column": 7
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 625,
          "column": 4
        },
        "end": {
          "line": 635,
          "column": 5
        }
      },
      "file": "/Users/snielsen/combo2/src/Smarty.js"
    },
    "params": [
      {
        "name": "str",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The string to trim",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 19,
                      "offset": 18
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 19,
                  "offset": 18
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 19,
              "offset": 18
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "name": "characters",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "An undelimited string of characters to trim off both sides\n                                 of the string.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 48,
                      "offset": 106
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 48,
                  "offset": 106
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 48,
              "offset": 106
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "name": "flags",
        "lineNumber": 6,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Optional. Regex flags that would be used in a javascript\n                                 regex. Defaults to 'g'.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 2,
                      "column": 57,
                      "offset": 113
                    },
                    "indent": [
                      1
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 57,
                  "offset": 113
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 57,
              "offset": 113
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A trimmed string",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 17,
                      "offset": 16
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 17,
                  "offset": 16
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 17,
              "offset": 16
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "name": "trimSpecial",
    "kind": "function",
    "memberof": "Wui.Smarty",
    "scope": "instance",
    "members": {
      "instance": [],
      "static": []
    },
    "path": [
      {
        "name": "trimSpecial",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#trimSpecial"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Unescape a string for a given type of output.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 46,
              "offset": 45
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 46,
          "offset": 45
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "The string to escape/unescape",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "str"
      },
      {
        "title": "param",
        "description": "String containing the escape type ('html'|'javascript'|'json'|'url')",
        "lineNumber": 4,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "type"
      },
      {
        "title": "returns",
        "description": "An unescaped string.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 638,
        "column": 4
      },
      "end": {
        "line": 645,
        "column": 7
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 646,
          "column": 4
        },
        "end": {
          "line": 648,
          "column": 5
        }
      },
      "file": "/Users/snielsen/combo2/src/Smarty.js"
    },
    "params": [
      {
        "name": "str",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The string to escape/unescape",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 30,
              "offset": 29
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "name": "type",
        "lineNumber": 4,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "String containing the escape type ('html'|'javascript'|'json'|'url')",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 69,
                      "offset": 68
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 69,
                  "offset": 68
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 69,
              "offset": 68
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "An unescaped string.",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 21,
                      "offset": 20
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "name": "unescape",
    "kind": "function",
    "memberof": "Wui.Smarty",
    "scope": "instance",
    "members": {
      "instance": [],
      "static": []
    },
    "path": [
      {
        "name": "unescape",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#unescape"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Makes the entire string lower-case.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 36,
                  "offset": 35
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 36,
              "offset": 35
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 36,
          "offset": 35
        }
      }
    },
    "tags": [
      {
        "title": "param",
        "description": "A string to be capitalized. ie: \"foo bar baz\"",
        "lineNumber": 3,
        "type": {
          "type": "NameExpression",
          "name": "string"
        },
        "name": "str"
      },
      {
        "title": "returns",
        "description": "Capitalized string. ie: \"FOO BAR BAZ\"",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "loc": {
      "start": {
        "line": 651,
        "column": 4
      },
      "end": {
        "line": 657,
        "column": 7
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 658,
          "column": 4
        },
        "end": {
          "line": 660,
          "column": 5
        }
      },
      "file": "/Users/snielsen/combo2/src/Smarty.js"
    },
    "params": [
      {
        "name": "str",
        "lineNumber": 3,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "A string to be capitalized. ie: \"foo bar baz\"",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 46,
                      "offset": 45
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 46,
                  "offset": 45
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 46,
              "offset": 45
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Capitalized string. ie: \"FOO BAR BAZ\"",
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 38,
                      "offset": 37
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 38,
                  "offset": 37
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 38,
              "offset": 37
            }
          }
        },
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      }
    ],
    "name": "upper",
    "kind": "function",
    "memberof": "Wui.Smarty",
    "scope": "instance",
    "members": {
      "instance": [],
      "static": []
    },
    "path": [
      {
        "name": "upper",
        "kind": "function",
        "scope": "instance"
      }
    ],
    "namespace": "#upper"
  }
]